// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages_@home_zjupanda_odometer.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Home_WheelsOmni_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Home_WheelsOmni_reflection_ = NULL;
const ::google::protobuf::Descriptor* Home_VelocityOmni_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Home_VelocityOmni_reflection_ = NULL;
const ::google::protobuf::Descriptor* Home_Odometer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Home_Odometer_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto() {
  protobuf_AddDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages_@home_zjupanda_odometer.proto");
  GOOGLE_CHECK(file != NULL);
  Home_WheelsOmni_descriptor_ = file->message_type(0);
  static const int Home_WheelsOmni_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_WheelsOmni, w1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_WheelsOmni, w2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_WheelsOmni, w3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_WheelsOmni, w4_),
  };
  Home_WheelsOmni_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Home_WheelsOmni_descriptor_,
      Home_WheelsOmni::default_instance_,
      Home_WheelsOmni_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_WheelsOmni, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_WheelsOmni, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Home_WheelsOmni));
  Home_VelocityOmni_descriptor_ = file->message_type(1);
  static const int Home_VelocityOmni_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_VelocityOmni, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_VelocityOmni, vy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_VelocityOmni, w_),
  };
  Home_VelocityOmni_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Home_VelocityOmni_descriptor_,
      Home_VelocityOmni::default_instance_,
      Home_VelocityOmni_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_VelocityOmni, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_VelocityOmni, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Home_VelocityOmni));
  Home_Odometer_descriptor_ = file->message_type(2);
  static const int Home_Odometer_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, cycle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, wheels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, gv_),
  };
  Home_Odometer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Home_Odometer_descriptor_,
      Home_Odometer::default_instance_,
      Home_Odometer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Home_Odometer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Home_Odometer));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Home_WheelsOmni_descriptor_, &Home_WheelsOmni::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Home_VelocityOmni_descriptor_, &Home_VelocityOmni::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Home_Odometer_descriptor_, &Home_Odometer::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_5f_40home_5fzjupanda_5fodometer_2eproto() {
  delete Home_WheelsOmni::default_instance_;
  delete Home_WheelsOmni_reflection_;
  delete Home_VelocityOmni::default_instance_;
  delete Home_VelocityOmni_reflection_;
  delete Home_Odometer::default_instance_;
  delete Home_Odometer_reflection_;
}

void protobuf_AddDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&messages_@home_zjupanda_odometer.proto"
    "\"A\n\017Home_WheelsOmni\022\n\n\002w1\030\001 \002(\001\022\n\n\002w2\030\002 "
    "\002(\001\022\n\n\002w3\030\003 \002(\001\022\n\n\002w4\030\004 \002(\001\"6\n\021Home_Velo"
    "cityOmni\022\n\n\002vx\030\001 \002(\001\022\n\n\002vy\030\002 \002(\001\022\t\n\001w\030\003 "
    "\002(\001\"\245\001\n\rHome_Odometer\022\r\n\005cycle\030\001 \002(\r\022\t\n\001"
    "x\030\002 \002(\001\022\t\n\001y\030\003 \002(\001\022\r\n\005angle\030\004 \002(\001\022 \n\006whe"
    "els\030\005 \001(\0132\020.Home_WheelsOmni\022\036\n\002lv\030\006 \001(\0132"
    "\022.Home_VelocityOmni\022\036\n\002gv\030\007 \001(\0132\022.Home_V"
    "elocityOmni", 331);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_@home_zjupanda_odometer.proto", &protobuf_RegisterTypes);
  Home_WheelsOmni::default_instance_ = new Home_WheelsOmni();
  Home_VelocityOmni::default_instance_ = new Home_VelocityOmni();
  Home_Odometer::default_instance_ = new Home_Odometer();
  Home_WheelsOmni::default_instance_->InitAsDefaultInstance();
  Home_VelocityOmni::default_instance_->InitAsDefaultInstance();
  Home_Odometer::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_5f_40home_5fzjupanda_5fodometer_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_5f_40home_5fzjupanda_5fodometer_2eproto {
  StaticDescriptorInitializer_messages_5f_40home_5fzjupanda_5fodometer_2eproto() {
    protobuf_AddDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto();
  }
} static_descriptor_initializer_messages_5f_40home_5fzjupanda_5fodometer_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Home_WheelsOmni::kW1FieldNumber;
const int Home_WheelsOmni::kW2FieldNumber;
const int Home_WheelsOmni::kW3FieldNumber;
const int Home_WheelsOmni::kW4FieldNumber;
#endif  // !_MSC_VER

Home_WheelsOmni::Home_WheelsOmni()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Home_WheelsOmni::InitAsDefaultInstance() {
}

Home_WheelsOmni::Home_WheelsOmni(const Home_WheelsOmni& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Home_WheelsOmni::SharedCtor() {
  _cached_size_ = 0;
  w1_ = 0;
  w2_ = 0;
  w3_ = 0;
  w4_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Home_WheelsOmni::~Home_WheelsOmni() {
  SharedDtor();
}

void Home_WheelsOmni::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Home_WheelsOmni::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Home_WheelsOmni::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Home_WheelsOmni_descriptor_;
}

const Home_WheelsOmni& Home_WheelsOmni::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto();  return *default_instance_;
}

Home_WheelsOmni* Home_WheelsOmni::default_instance_ = NULL;

Home_WheelsOmni* Home_WheelsOmni::New() const {
  return new Home_WheelsOmni;
}

void Home_WheelsOmni::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    w1_ = 0;
    w2_ = 0;
    w3_ = 0;
    w4_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Home_WheelsOmni::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double w1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w1_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_w2;
        break;
      }
      
      // required double w2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w2_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_w3;
        break;
      }
      
      // required double w3 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w3_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_w4;
        break;
      }
      
      // required double w4 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w4_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Home_WheelsOmni::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double w1 = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->w1(), output);
  }
  
  // required double w2 = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->w2(), output);
  }
  
  // required double w3 = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->w3(), output);
  }
  
  // required double w4 = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->w4(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Home_WheelsOmni::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double w1 = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->w1(), target);
  }
  
  // required double w2 = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->w2(), target);
  }
  
  // required double w3 = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->w3(), target);
  }
  
  // required double w4 = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->w4(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Home_WheelsOmni::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double w1 = 1;
    if (has_w1()) {
      total_size += 1 + 8;
    }
    
    // required double w2 = 2;
    if (has_w2()) {
      total_size += 1 + 8;
    }
    
    // required double w3 = 3;
    if (has_w3()) {
      total_size += 1 + 8;
    }
    
    // required double w4 = 4;
    if (has_w4()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Home_WheelsOmni::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Home_WheelsOmni* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Home_WheelsOmni*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Home_WheelsOmni::MergeFrom(const Home_WheelsOmni& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_w1(from.w1());
    }
    if (from._has_bit(1)) {
      set_w2(from.w2());
    }
    if (from._has_bit(2)) {
      set_w3(from.w3());
    }
    if (from._has_bit(3)) {
      set_w4(from.w4());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Home_WheelsOmni::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Home_WheelsOmni::CopyFrom(const Home_WheelsOmni& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Home_WheelsOmni::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void Home_WheelsOmni::Swap(Home_WheelsOmni* other) {
  if (other != this) {
    std::swap(w1_, other->w1_);
    std::swap(w2_, other->w2_);
    std::swap(w3_, other->w3_);
    std::swap(w4_, other->w4_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Home_WheelsOmni::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Home_WheelsOmni_descriptor_;
  metadata.reflection = Home_WheelsOmni_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Home_VelocityOmni::kVxFieldNumber;
const int Home_VelocityOmni::kVyFieldNumber;
const int Home_VelocityOmni::kWFieldNumber;
#endif  // !_MSC_VER

Home_VelocityOmni::Home_VelocityOmni()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Home_VelocityOmni::InitAsDefaultInstance() {
}

Home_VelocityOmni::Home_VelocityOmni(const Home_VelocityOmni& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Home_VelocityOmni::SharedCtor() {
  _cached_size_ = 0;
  vx_ = 0;
  vy_ = 0;
  w_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Home_VelocityOmni::~Home_VelocityOmni() {
  SharedDtor();
}

void Home_VelocityOmni::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Home_VelocityOmni::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Home_VelocityOmni::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Home_VelocityOmni_descriptor_;
}

const Home_VelocityOmni& Home_VelocityOmni::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto();  return *default_instance_;
}

Home_VelocityOmni* Home_VelocityOmni::default_instance_ = NULL;

Home_VelocityOmni* Home_VelocityOmni::New() const {
  return new Home_VelocityOmni;
}

void Home_VelocityOmni::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vx_ = 0;
    vy_ = 0;
    w_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Home_VelocityOmni::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double vx = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_vy;
        break;
      }
      
      // required double vy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_w;
        break;
      }
      
      // required double w = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_w:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Home_VelocityOmni::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required double vx = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->vx(), output);
  }
  
  // required double vy = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->vy(), output);
  }
  
  // required double w = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->w(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Home_VelocityOmni::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required double vx = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->vx(), target);
  }
  
  // required double vy = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->vy(), target);
  }
  
  // required double w = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->w(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Home_VelocityOmni::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double vx = 1;
    if (has_vx()) {
      total_size += 1 + 8;
    }
    
    // required double vy = 2;
    if (has_vy()) {
      total_size += 1 + 8;
    }
    
    // required double w = 3;
    if (has_w()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Home_VelocityOmni::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Home_VelocityOmni* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Home_VelocityOmni*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Home_VelocityOmni::MergeFrom(const Home_VelocityOmni& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_vx(from.vx());
    }
    if (from._has_bit(1)) {
      set_vy(from.vy());
    }
    if (from._has_bit(2)) {
      set_w(from.w());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Home_VelocityOmni::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Home_VelocityOmni::CopyFrom(const Home_VelocityOmni& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Home_VelocityOmni::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void Home_VelocityOmni::Swap(Home_VelocityOmni* other) {
  if (other != this) {
    std::swap(vx_, other->vx_);
    std::swap(vy_, other->vy_);
    std::swap(w_, other->w_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Home_VelocityOmni::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Home_VelocityOmni_descriptor_;
  metadata.reflection = Home_VelocityOmni_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Home_Odometer::kCycleFieldNumber;
const int Home_Odometer::kXFieldNumber;
const int Home_Odometer::kYFieldNumber;
const int Home_Odometer::kAngleFieldNumber;
const int Home_Odometer::kWheelsFieldNumber;
const int Home_Odometer::kLvFieldNumber;
const int Home_Odometer::kGvFieldNumber;
#endif  // !_MSC_VER

Home_Odometer::Home_Odometer()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Home_Odometer::InitAsDefaultInstance() {
  wheels_ = const_cast< ::Home_WheelsOmni*>(&::Home_WheelsOmni::default_instance());
  lv_ = const_cast< ::Home_VelocityOmni*>(&::Home_VelocityOmni::default_instance());
  gv_ = const_cast< ::Home_VelocityOmni*>(&::Home_VelocityOmni::default_instance());
}

Home_Odometer::Home_Odometer(const Home_Odometer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Home_Odometer::SharedCtor() {
  _cached_size_ = 0;
  cycle_ = 0u;
  x_ = 0;
  y_ = 0;
  angle_ = 0;
  wheels_ = NULL;
  lv_ = NULL;
  gv_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Home_Odometer::~Home_Odometer() {
  SharedDtor();
}

void Home_Odometer::SharedDtor() {
  if (this != default_instance_) {
    delete wheels_;
    delete lv_;
    delete gv_;
  }
}

void Home_Odometer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Home_Odometer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Home_Odometer_descriptor_;
}

const Home_Odometer& Home_Odometer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_5f_40home_5fzjupanda_5fodometer_2eproto();  return *default_instance_;
}

Home_Odometer* Home_Odometer::default_instance_ = NULL;

Home_Odometer* Home_Odometer::New() const {
  return new Home_Odometer;
}

void Home_Odometer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cycle_ = 0u;
    x_ = 0;
    y_ = 0;
    angle_ = 0;
    if (_has_bit(4)) {
      if (wheels_ != NULL) wheels_->::Home_WheelsOmni::Clear();
    }
    if (_has_bit(5)) {
      if (lv_ != NULL) lv_->::Home_VelocityOmni::Clear();
    }
    if (_has_bit(6)) {
      if (gv_ != NULL) gv_->::Home_VelocityOmni::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Home_Odometer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cycle = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cycle_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_x;
        break;
      }
      
      // required double x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          _set_bit(1);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_y;
        break;
      }
      
      // required double y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_angle;
        break;
      }
      
      // required double angle = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_)));
          _set_bit(3);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_wheels;
        break;
      }
      
      // optional .Home_WheelsOmni wheels = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wheels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wheels()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_lv;
        break;
      }
      
      // optional .Home_VelocityOmni lv = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_gv;
        break;
      }
      
      // optional .Home_VelocityOmni gv = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Home_Odometer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 cycle = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cycle(), output);
  }
  
  // required double x = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }
  
  // required double y = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }
  
  // required double angle = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->angle(), output);
  }
  
  // optional .Home_WheelsOmni wheels = 5;
  if (_has_bit(4)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->wheels(), output);
  }
  
  // optional .Home_VelocityOmni lv = 6;
  if (_has_bit(5)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->lv(), output);
  }
  
  // optional .Home_VelocityOmni gv = 7;
  if (_has_bit(6)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->gv(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Home_Odometer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 cycle = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cycle(), target);
  }
  
  // required double x = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }
  
  // required double y = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }
  
  // required double angle = 4;
  if (_has_bit(3)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->angle(), target);
  }
  
  // optional .Home_WheelsOmni wheels = 5;
  if (_has_bit(4)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->wheels(), target);
  }
  
  // optional .Home_VelocityOmni lv = 6;
  if (_has_bit(5)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->lv(), target);
  }
  
  // optional .Home_VelocityOmni gv = 7;
  if (_has_bit(6)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->gv(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Home_Odometer::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 cycle = 1;
    if (has_cycle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cycle());
    }
    
    // required double x = 2;
    if (has_x()) {
      total_size += 1 + 8;
    }
    
    // required double y = 3;
    if (has_y()) {
      total_size += 1 + 8;
    }
    
    // required double angle = 4;
    if (has_angle()) {
      total_size += 1 + 8;
    }
    
    // optional .Home_WheelsOmni wheels = 5;
    if (has_wheels()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wheels());
    }
    
    // optional .Home_VelocityOmni lv = 6;
    if (has_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lv());
    }
    
    // optional .Home_VelocityOmni gv = 7;
    if (has_gv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gv());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Home_Odometer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Home_Odometer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Home_Odometer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Home_Odometer::MergeFrom(const Home_Odometer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_cycle(from.cycle());
    }
    if (from._has_bit(1)) {
      set_x(from.x());
    }
    if (from._has_bit(2)) {
      set_y(from.y());
    }
    if (from._has_bit(3)) {
      set_angle(from.angle());
    }
    if (from._has_bit(4)) {
      mutable_wheels()->::Home_WheelsOmni::MergeFrom(from.wheels());
    }
    if (from._has_bit(5)) {
      mutable_lv()->::Home_VelocityOmni::MergeFrom(from.lv());
    }
    if (from._has_bit(6)) {
      mutable_gv()->::Home_VelocityOmni::MergeFrom(from.gv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Home_Odometer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Home_Odometer::CopyFrom(const Home_Odometer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Home_Odometer::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  if (has_wheels()) {
    if (!this->wheels().IsInitialized()) return false;
  }
  if (has_lv()) {
    if (!this->lv().IsInitialized()) return false;
  }
  if (has_gv()) {
    if (!this->gv().IsInitialized()) return false;
  }
  return true;
}

void Home_Odometer::Swap(Home_Odometer* other) {
  if (other != this) {
    std::swap(cycle_, other->cycle_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(angle_, other->angle_);
    std::swap(wheels_, other->wheels_);
    std::swap(lv_, other->lv_);
    std::swap(gv_, other->gv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Home_Odometer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Home_Odometer_descriptor_;
  metadata.reflection = Home_Odometer_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
