
#include <ceres/ceres.h>
#include <ceres/rotation.h>
#include <eigen3/Eigen/Dense>
#include <Eigen/Geometry>

#include "sophus/se3.hpp"
#include "sophus/so3.hpp"

#include <Eigen/Dense>

// #include "glog/logging.h"

using namespace Eigen;
using namespace std;
using namespace ceres;

extern const double data1[];
extern const double data2[]; 
const int kNumObservations = 100;


struct ProjectionFactorNum
{
	ProjectionFactorNum(const Eigen::VectorXd &_pose_VIO, const Eigen::VectorXd &_pose_GT) : pose_VIO(_pose_VIO), pose_GT(_pose_GT)
	{
	}

	bool operator()(const double * const pare_T_cam, double * residuals) const
	{
        // Eigen::MatrixXd T44(4,4);
        // Eigen::MatrixXd TBT(4,4);
        // Eigen::MatrixXd A(4,4);
        // Eigen::MatrixXd B(4,4);
	Eigen::Matrix<double, 4, 4> T44 = Eigen::Matrix<double, 4, 4>::Identity(); 
	Eigen::Matrix<double, 4, 4> TBT = Eigen::Matrix<double, 4, 4>::Identity(); 
	Eigen::Matrix<double, 4, 4> A = Eigen::Matrix<double, 4, 4>::Identity();
	Eigen::Matrix<double, 4, 4> B = Eigen::Matrix<double, 4, 4>::Identity(); 


        // Eigen::MatrixXd T_resdual;
	Eigen::Matrix<double, 4, 4> T_residual = Eigen::Matrix<double, 4, 4>::Identity(); 


	    Eigen::Quaterniond q_A(pose_GT(6), pose_GT(3), pose_GT(4), pose_GT(5));

        A(0,3) = pose_GT(0); 
        A(1,3) = pose_GT(1); 
        A(2,3) = pose_GT(2);
        A.block(0,0,3,3) = q_A.toRotationMatrix();

	    Eigen::Quaterniond q_B(pose_VIO(6), pose_VIO(3), pose_VIO(4), pose_VIO(5));
        B(0,3) = pose_VIO(0); 
        B(1,3) = pose_VIO(1); 
        B(2,3) = pose_VIO(2);
        B.block(0,0,3,3) = q_B.toRotationMatrix();



	    Eigen::Quaterniond q_T_cam(pare_T_cam[6], pare_T_cam[3], pare_T_cam[4], pare_T_cam[5]);

        T44(0,3) = pare_T_cam[0]; 
        T44(1,3) = pare_T_cam[1]; 
        T44(2,3) = pare_T_cam[3];
        T44.block(0,0,3,3) = q_T_cam.toRotationMatrix();

	    TBT = (T44.inverse())*B*T44;


        T_residual = TBT.inverse()*A;

        // Eigen::Quaterniond q_tbt(TBT.block(0,0,3,3));
        Eigen::Vector3d t(T_residual(0,3),T_residual(1,3),T_residual(2,3));
        Sophus::SE3 SE3_Rt(TBT.block(0,0,3,3), t); 
        typedef Eigen::Matrix<double,6,1> Vector6d;
        Vector6d se3 = SE3_Rt.log();

	    residuals[0] = se3(0);
	    residuals[1] = se3(1);
        residuals[2] = se3(2);
	    residuals[3] = se3(3);
	    residuals[4] = se3(4);
        residuals[5] = se3(5);

        // // test 
	    // residuals[0] = pare_T_cam[0]-1.1;
	    // residuals[1] = pare_T_cam[1]-2.2;
        // residuals[2] = pare_T_cam[2]-3.3;
	    // residuals[3] = pare_T_cam[3]-4.4;
	    // residuals[4] = pare_T_cam[4]-5.5;
        // residuals[5] = pare_T_cam[5]-6.6;

        
    	return true;
	}

	static ceres::CostFunction* Create(const Eigen::VectorXd pose_VIO,
	                                   const Eigen::VectorXd pose_GT) 
	{
	  return (new ceres::NumericDiffCostFunction<
	          ProjectionFactorNum, ceres::CENTRAL, 6, 7>(
	          	new ProjectionFactorNum(pose_VIO,pose_GT)));
	}

	Eigen::VectorXd pose_VIO;
	Eigen::VectorXd pose_GT;

};



int main(int argc, char** argv) {
    google::InitGoogleLogging(argv[0]);

    double T_cam[7] = {0, 0, 0, 0, 0, 0, 1};

    ceres::Problem problem;

    for (int i = 0; i < kNumObservations; ++i) {

        Eigen::VectorXd obs_vio(7);
        obs_vio << data1[8*i+1], data1[8*i+2],data1[8*i+3],data1[8*i+4],data1[8*i+5],data1[8*i+6],data1[8*i+7];
        Eigen::VectorXd obs_gt(7);
        obs_gt  << data2[8*i+1], data2[8*i+2],data2[8*i+3],data2[8*i+4],data2[8*i+5],data2[8*i+6],data2[8*i+7];

        ceres::CostFunction *cost_function;
        cost_function =
                new ceres::NumericDiffCostFunction<ProjectionFactorNum, ceres::CENTRAL, 6,7>(
                        new ProjectionFactorNum(obs_vio, obs_gt));
        problem.AddResidualBlock(cost_function, NULL, T_cam);
    }

    ceres::Solver::Options options;
    options.max_num_iterations = 100; //25;
    options.linear_solver_type = ceres::DENSE_QR;
    options.minimizer_progress_to_stdout = true;

    ceres::Solver::Summary summary;
    ceres::Solve(options, &problem, &summary);
    std::cout << summary.BriefReport() << "\n";

    std::cout << T_cam[0] << " " << T_cam[1] << " " << T_cam[2] << " " << T_cam[3] << " " << T_cam[4] << " " << T_cam[5] << " "<< T_cam[6]  << "\n";

    return 0;
}


const double data1[] = {
// timestamp, x,y,z,qx,qy,qz,qw
0.000000000,-0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,
0.008333000,0.000001,-0.000083,-0.000080,-0.020537,-0.019514,-0.030543,0.999132,
0.016667000,-0.000019,-0.000201,-0.000144,-0.017898,0.032407,-0.017374,0.999163,
0.025000000,-0.000024,-0.000252,-0.000187,-0.023821,0.066427,-0.005419,0.997492,
0.033333000,-0.000026,-0.000295,-0.000224,-0.016543,0.057672,-0.007495,0.998170,
0.041667000,-0.000011,-0.000356,-0.000263,-0.012153,-0.012436,0.004828,0.999837,
0.050000000,-0.000003,-0.000377,-0.000317,0.003508,0.024652,-0.004562,0.999680,
0.058333000,0.000010,-0.000396,-0.000369,0.004363,0.051933,-0.001703,0.998640,
0.066667000,0.000001,-0.000419,-0.000418,-0.010059,0.015830,-0.007804,0.999794,
0.075000000,0.000004,-0.000459,-0.000456,-0.027692,-0.032017,-0.007693,0.999074,
0.083333000,-0.000000,-0.000504,-0.000496,-0.035609,0.010723,-0.011925,0.999237,
0.091667000,-0.000021,-0.000567,-0.000534,-0.039955,0.042504,-0.012292,0.998221,
0.100000000,-0.000031,-0.000628,-0.000595,-0.024235,0.011284,-0.013054,0.999557,
0.108333000,-0.000020,-0.000682,-0.000642,-0.023927,-0.037151,-0.002493,0.999020,
0.116667000,-0.000002,-0.000723,-0.000698,-0.011423,0.017613,0.006549,0.999758,
0.125000000,0.000012,-0.000767,-0.000773,0.009100,0.045321,0.002934,0.998927,
0.133333000,0.000042,-0.000800,-0.000831,0.001452,-0.004715,0.010564,0.999932,
0.141667000,0.000072,-0.000828,-0.000892,0.004494,-0.056262,0.016194,0.998275,
0.150000000,0.000132,-0.000848,-0.000958,0.010664,-0.006902,0.022755,0.999660,
0.158333000,0.000117,-0.000889,-0.001033,0.015542,0.037248,-0.016128,0.999055,
0.166667000,0.000146,-0.000928,-0.001092,0.000957,-0.011324,-0.000826,0.999935,
0.175000000,0.000212,-0.000964,-0.001161,-0.000426,-0.071277,0.003609,0.997450,
0.183333000,0.000234,-0.001004,-0.001234,-0.004832,-0.011155,-0.009140,0.999884,
0.191667000,0.000245,-0.001061,-0.001310,-0.005026,0.012566,0.000255,0.999908,
0.200000000,0.000231,-0.001113,-0.001372,-0.011981,-0.014971,-0.007695,0.999787,
0.208333000,0.000274,-0.001173,-0.001438,-0.004720,-0.045189,0.013283,0.998879,
0.216667000,0.000247,-0.001212,-0.001480,-0.012500,-0.015343,-0.015402,0.999686,
0.225000000,0.000252,-0.001243,-0.001540,0.011081,0.041680,-0.009145,0.999028,
0.233333000,0.000272,-0.001246,-0.001585,0.014750,0.007377,-0.000748,0.999864,
0.241667000,0.000352,-0.001256,-0.001626,0.008058,-0.031681,0.000213,0.999466,
0.250000000,0.000390,-0.001243,-0.001679,0.021196,-0.000022,-0.020002,0.999575,
0.258333000,0.000445,-0.001233,-0.001726,0.014308,0.049079,-0.020856,0.998475,
0.266667000,0.000471,-0.001267,-0.001769,0.003042,0.006436,-0.050026,0.998723,
0.275000000,0.000575,-0.001241,-0.001818,-0.029881,-0.064719,-0.030527,0.996989,
0.283333000,0.000674,-0.001255,-0.001854,-0.057990,-0.033722,-0.037584,0.997039,
0.291667000,0.000800,-0.001268,-0.001918,-0.048116,0.018777,-0.038284,0.997931,
0.300000000,0.000954,-0.001254,-0.001997,-0.036976,-0.011037,-0.043348,0.998315,
0.308333000,0.001160,-0.001265,-0.002064,-0.035813,-0.010729,-0.016061,0.999172,
0.316667000,0.001361,-0.001266,-0.002190,-0.002691,-0.035846,-0.001263,0.999353,
0.325000000,0.001549,-0.001234,-0.002303,-0.001254,0.007843,-0.024269,0.999674,
0.333333000,0.001756,-0.001212,-0.002439,0.011309,-0.042525,0.003794,0.999024,
0.341667000,0.001929,-0.001169,-0.002543,0.004303,-0.093461,-0.017125,0.995466,
0.350000000,0.002151,-0.001048,-0.002626,0.005664,-0.033736,-0.031475,0.998919,
0.358333000,0.002361,-0.000953,-0.002709,0.016577,0.007972,-0.032861,0.999291,
0.366667000,0.002628,-0.000881,-0.002782,0.017379,-0.031995,0.003871,0.999329,
0.375000000,0.002918,-0.000808,-0.002871,0.011222,-0.115725,0.020176,0.993013,
0.383333000,0.003164,-0.000729,-0.002950,-0.005787,-0.077655,-0.006928,0.996939,
0.391667000,0.003419,-0.000672,-0.003050,-0.007020,-0.041255,0.003505,0.999118,
0.400000000,0.003605,-0.000594,-0.003171,-0.013329,-0.095559,-0.043098,0.994401,
0.408333000,0.003787,-0.000526,-0.003271,-0.005245,-0.124394,-0.035154,0.991596,
0.416667000,0.003976,-0.000423,-0.003358,0.025808,-0.042382,-0.031450,0.998273,
0.425000000,0.004141,-0.000364,-0.003441,0.031371,0.019273,-0.018233,0.999156,
0.433333000,0.004266,-0.000300,-0.003510,0.027706,-0.018692,-0.022605,0.999186,
0.441667000,0.004362,-0.000253,-0.003549,0.011696,-0.054469,-0.022483,0.998194,
0.450000000,0.004421,-0.000229,-0.003565,0.020594,0.000221,-0.025191,0.999470,
0.458333000,0.004457,-0.000221,-0.003577,0.016550,0.029498,-0.021338,0.999200,
0.466667000,0.004483,-0.000241,-0.003569,0.008837,0.009505,-0.014823,0.999806,
0.475000000,0.004503,-0.000281,-0.003552,0.001202,-0.018405,-0.004556,0.999820,
0.483333000,0.004510,-0.000333,-0.003535,0.003033,0.020294,-0.004580,0.999779,
0.491667000,0.004504,-0.000422,-0.003503,0.003826,0.066910,-0.003160,0.997747,
0.500000000,0.004527,-0.000520,-0.003487,0.003135,0.028325,0.013358,0.999505,
0.508333000,0.004580,-0.000641,-0.003473,0.005831,-0.021210,0.023229,0.999488,
0.516667000,0.004626,-0.000770,-0.003459,0.001830,0.009634,0.018336,0.999784,
0.525000000,0.004700,-0.000942,-0.003472,0.005559,0.044652,0.028367,0.998584,
0.533333000,0.004789,-0.001143,-0.003470,-0.017589,0.018668,0.033838,0.999098,
0.541667000,0.004922,-0.001344,-0.003496,-0.022699,-0.014350,0.033766,0.999069,
0.550000000,0.005073,-0.001553,-0.003538,-0.037700,0.020369,0.043287,0.998143,
0.558333000,0.005210,-0.001757,-0.003620,-0.036651,0.063499,0.030230,0.996850,
0.566667000,0.005403,-0.001983,-0.003750,-0.033335,0.043764,0.057989,0.996800,
0.575000000,0.005555,-0.002126,-0.003899,-0.017918,-0.046121,0.019086,0.998593,
0.583333000,0.005716,-0.002242,-0.004063,-0.007659,-0.038989,0.018271,0.999043,
0.591667000,0.005878,-0.002346,-0.004224,-0.018360,-0.027030,0.012659,0.999386,
0.600000000,0.006065,-0.002475,-0.004383,-0.022097,-0.078087,0.025017,0.996388,
0.608333000,0.006236,-0.002583,-0.004516,-0.023906,-0.124597,0.002078,0.991917,
0.616667000,0.006368,-0.002699,-0.004647,-0.003801,-0.055941,0.001213,0.998426,
0.625000000,0.006486,-0.002780,-0.004731,-0.015945,0.011546,-0.005590,0.999791,
0.633333000,0.006573,-0.002841,-0.004804,-0.028201,-0.036693,-0.038101,0.998202,
0.641667000,0.006697,-0.002898,-0.004869,-0.027560,-0.075887,-0.017208,0.996587,
0.650000000,0.006781,-0.002971,-0.004927,-0.018424,-0.009562,-0.028142,0.999388,
0.658333000,0.006830,-0.003021,-0.004974,-0.011510,0.060639,-0.042124,0.997204,
0.666667000,0.006904,-0.003009,-0.005006,-0.011559,-0.005457,-0.004952,0.999906,
0.675000000,0.006949,-0.003011,-0.005000,-0.017167,-0.016907,-0.004522,0.999699,
0.683333000,0.007035,-0.002969,-0.004971,-0.000891,0.025891,0.024128,0.999373,
0.691667000,0.007017,-0.002930,-0.004947,0.017758,0.071131,-0.023914,0.997022,
0.700000000,0.007105,-0.002853,-0.004903,0.014086,0.007968,0.036454,0.999204,
0.708333000,0.007176,-0.002802,-0.004866,0.011715,-0.029062,0.017145,0.999362,
0.716667000,0.007241,-0.002745,-0.004854,0.017940,0.010396,0.009202,0.999743,
0.725000000,0.007305,-0.002686,-0.004858,0.015151,0.027478,0.011290,0.999444,
0.733333000,0.007387,-0.002645,-0.004891,0.016128,-0.020167,0.009885,0.999618,
0.741667000,0.007481,-0.002601,-0.004935,0.002021,-0.071579,0.014291,0.997330,
0.750000000,0.007568,-0.002556,-0.004988,0.005256,-0.032566,0.006196,0.999437,
0.758333000,0.007619,-0.002513,-0.005075,0.020556,0.003403,-0.001573,0.999782,
0.766667000,0.007670,-0.002475,-0.005169,0.012664,-0.044611,-0.001499,0.998923,
0.775000000,0.007727,-0.002429,-0.005246,-0.002177,-0.072428,0.007979,0.997339,
0.783333000,0.007729,-0.002385,-0.005317,0.008730,-0.014595,-0.010560,0.999800,
0.791667000,0.007716,-0.002352,-0.005369,0.008649,0.052439,-0.014647,0.998479,
0.800000000,0.007670,-0.002314,-0.005408,0.003314,0.003053,-0.014647,0.999883,
0.808333000,0.007630,-0.002269,-0.005412,-0.001713,0.002317,-0.003303,0.999990,
0.816667000,0.007570,-0.002248,-0.005408,0.007465,0.039893,-0.021561,0.998943,
0.825000000,0.007505,-0.002234,-0.005394,0.007843,0.063591,-0.014814,0.997835,
0.833333000,0.007431,-0.002225,-0.005379,0.006348,0.036288,-0.018319,0.999153,
0.841667000,0.007362,-0.002233,-0.005373,0.004697,0.002236,-0.019808,0.999790,
0.850000000,0.007275,-0.002250,-0.005368,-0.003837,0.043433,-0.027112,0.998681,
0.858333000,0.007195,-0.002295,-0.005393,0.005109,0.088141,-0.034147,0.995509,
0.866667000,0.007145,-0.002355,-0.005407,-0.016241,0.048973,-0.027079,0.998301,
0.875000000,0.007102,-0.002463,-0.005423,-0.040207,-0.006398,-0.026020,0.998832,
0.883333000,0.007081,-0.002551,-0.005437,-0.038459,0.031555,-0.003614,0.998755,
0.891667000,0.007079,-0.002686,-0.005470,-0.031374,0.044800,0.017221,0.998355,
0.900000000,0.007096,-0.002777,-0.005503,-0.027430,0.001814,0.016156,0.999492,
0.908333000,0.007150,-0.002862,-0.005540,-0.029519,-0.044960,0.023681,0.998272,
0.916667000,0.007204,-0.002919,-0.005584,-0.016608,-0.021642,0.023565,0.999350,
0.925000000,0.007283,-0.002981,-0.005626,-0.010705,0.037390,0.026590,0.998890,
0.933333000,0.007395,-0.003032,-0.005690,-0.006201,-0.015906,0.024023,0.999566,
0.941667000,0.007510,-0.003073,-0.005757,-0.014186,-0.065286,0.016883,0.997623,
0.950000000,0.007619,-0.003119,-0.005845,-0.005990,-0.032591,0.009327,0.999407,
0.958333000,0.007716,-0.003173,-0.005919,-0.018974,0.003471,-0.001927,0.999812,
0.966667000,0.007810,-0.003209,-0.006009,-0.014747,-0.023088,-0.017820,0.999466,
0.975000000,0.007912,-0.003252,-0.006091,-0.021345,-0.059346,-0.001720,0.998008,
0.983333000,0.008008,-0.003283,-0.006174,-0.011006,-0.019773,-0.006314,0.999724
};


const double data2[] = {
0.000000000,-0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,
0.008333000,0.003185,-0.003757,0.000265,-0.020537,-0.019514,-0.030543,0.999132,
0.016667000,0.001386,-0.006614,-0.002862,-0.017898,0.032407,-0.017374,0.999163,
0.025000000,-0.003802,-0.009159,-0.008538,-0.023821,0.066427,-0.005419,0.997492,
0.033333000,-0.008192,-0.011186,-0.013256,-0.016543,0.057672,-0.007495,0.998170,
0.041667000,-0.007393,-0.011935,-0.013081,-0.012153,-0.012436,0.004828,0.999837,
0.050000000,-0.009223,-0.011969,-0.014605,0.003508,0.024652,-0.004562,0.999680,
0.058333000,-0.013479,-0.011724,-0.017895,0.004363,0.051933,-0.001703,0.998640,
0.066667000,-0.014411,-0.013124,-0.019498,-0.010059,0.015830,-0.007804,0.999794,
0.075000000,-0.011382,-0.015914,-0.018767,-0.027692,-0.032017,-0.007693,0.999074,
0.083333000,-0.011645,-0.019759,-0.021270,-0.035609,0.010723,-0.011925,0.999237,
0.091667000,-0.014498,-0.024136,-0.026115,-0.039955,0.042504,-0.012292,0.998221,
0.100000000,-0.014774,-0.027117,-0.028115,-0.024235,0.011284,-0.013054,0.999557,
0.108333000,-0.011575,-0.029279,-0.026880,-0.023927,-0.037151,-0.002493,0.999020,
0.116667000,-0.013357,-0.029840,-0.028672,-0.011423,0.017613,0.006549,0.999758,
0.125000000,-0.017304,-0.028880,-0.031292,0.009100,0.045321,0.002934,0.998927,
0.133333000,-0.017400,-0.028096,-0.030966,0.001452,-0.004715,0.010564,0.999932,
0.141667000,-0.013439,-0.026767,-0.027111,0.004494,-0.056262,0.016194,0.998275,
0.150000000,-0.013903,-0.024404,-0.026180,0.010664,-0.006902,0.022755,0.999660,
0.158333000,-0.016282,-0.024225,-0.028000,0.015542,0.037248,-0.016128,0.999055,
0.166667000,-0.015262,-0.024240,-0.027260,0.000957,-0.011324,-0.000826,0.999935,
0.175000000,-0.009406,-0.024098,-0.022627,-0.000426,-0.071277,0.003609,0.997450,
0.183333000,-0.007997,-0.025138,-0.022190,-0.004832,-0.011155,-0.009140,0.999884,
0.191667000,-0.009048,-0.025601,-0.023351,-0.005026,0.012566,0.000255,0.999908,
0.200000000,-0.007432,-0.027146,-0.023002,-0.011981,-0.014971,-0.007695,0.999787,
0.208333000,-0.004285,-0.026756,-0.020332,-0.004720,-0.045189,0.013283,0.998879,
0.216667000,-0.002260,-0.028835,-0.019949,-0.012500,-0.015343,-0.015402,0.999686,
0.225000000,-0.005318,-0.028544,-0.022257,0.011081,0.041680,-0.009145,0.999028,
0.233333000,-0.005881,-0.027357,-0.022060,0.014750,0.007377,-0.000748,0.999864,
0.241667000,-0.003146,-0.026701,-0.019593,0.008058,-0.031681,0.000213,0.999466,
0.250000000,-0.002145,-0.026250,-0.018620,0.021196,-0.000022,-0.020002,0.999575,
0.258333000,-0.005213,-0.026465,-0.021287,0.014308,0.049079,-0.020856,0.998475,
0.266667000,-0.003258,-0.029602,-0.021632,0.003042,0.006436,-0.050026,0.998723,
0.275000000,0.003747,-0.033856,-0.018714,-0.029881,-0.064719,-0.030527,0.996989,
0.283333000,0.008580,-0.041008,-0.019186,-0.057990,-0.033722,-0.037584,0.997039,
0.291667000,0.009202,-0.047713,-0.022798,-0.048116,0.018777,-0.038284,0.997931,
0.300000000,0.012505,-0.053624,-0.023843,-0.036976,-0.011037,-0.043348,0.998315,
0.308333000,0.014407,-0.057671,-0.024922,-0.035813,-0.010729,-0.016061,0.999172,
0.316667000,0.017665,-0.057989,-0.022790,-0.002691,-0.035846,-0.001263,0.999353,
0.325000000,0.018390,-0.059699,-0.023495,-0.001254,0.007843,-0.024269,0.999674,
0.333333000,0.022002,-0.058542,-0.020239,0.011309,-0.042525,0.003794,0.999024,
0.341667000,0.030864,-0.059240,-0.013804,0.004303,-0.093461,-0.017125,0.995466,
0.350000000,0.035445,-0.060706,-0.011312,0.005664,-0.033736,-0.031475,0.998919,
0.358333000,0.036557,-0.061443,-0.011156,0.016577,0.007972,-0.032861,0.999291,
0.366667000,0.039346,-0.059722,-0.008228,0.017379,-0.031995,0.003871,0.999329,
0.375000000,0.048379,-0.057667,-0.000087,0.011222,-0.115725,0.020176,0.993013,
0.383333000,0.055418,-0.058520,0.004791,-0.005787,-0.077655,-0.006928,0.996939,
0.391667000,0.058914,-0.058832,0.007107,-0.007020,-0.041255,0.003505,0.999118,
0.400000000,0.069171,-0.062464,0.012998,-0.013329,-0.095559,-0.043098,0.994401,
0.408333000,0.081440,-0.064951,0.021276,-0.005245,-0.124394,-0.035154,0.991596,
0.416667000,0.086676,-0.064822,0.025343,0.025808,-0.042382,-0.031450,0.998273,
0.425000000,0.086068,-0.063353,0.025458,0.031371,0.019273,-0.018233,0.999156,
0.433333000,0.088827,-0.062526,0.028005,0.027706,-0.018692,-0.022605,0.999186,
0.441667000,0.094552,-0.063021,0.032277,0.011696,-0.054469,-0.022483,0.998194,
0.450000000,0.095788,-0.062995,0.033233,0.020594,0.000221,-0.025191,0.999470,
0.458333000,0.094381,-0.063052,0.031995,0.016550,0.029498,-0.021338,0.999200,
0.466667000,0.094336,-0.063341,0.031783,0.008837,0.009505,-0.014823,0.999806,
0.475000000,0.096102,-0.063604,0.033108,0.001202,-0.018405,-0.004556,0.999820,
0.483333000,0.094652,-0.063699,0.031898,0.003033,0.020294,-0.004580,0.999779,
0.491667000,0.089246,-0.063620,0.027585,0.003826,0.066910,-0.003160,0.997747,
0.500000000,0.086269,-0.062482,0.025868,0.003135,0.028325,0.013358,0.999505,
0.508333000,0.086959,-0.060603,0.027588,0.005831,-0.021210,0.023229,0.999488,
0.516667000,0.085312,-0.059307,0.027054,0.001830,0.009634,0.018336,0.999784,
0.525000000,0.080295,-0.056919,0.024379,0.005559,0.044652,0.028367,0.998584,
0.533333000,0.077136,-0.056244,0.022240,-0.017589,0.018668,0.033838,0.999098,
0.541667000,0.076713,-0.056076,0.021978,-0.022699,-0.014350,0.033766,0.999069,
0.550000000,0.072945,-0.056461,0.018626,-0.037700,0.020369,0.043287,0.998143,
0.558333000,0.066335,-0.057641,0.012462,-0.036651,0.063499,0.030230,0.996850,
0.566667000,0.059945,-0.056582,0.007733,-0.033335,0.043764,0.057989,0.996800,
0.575000000,0.062919,-0.056977,0.009730,-0.017918,-0.046121,0.019086,0.998593,
0.583333000,0.065393,-0.056556,0.011766,-0.007659,-0.038989,0.018271,0.999043,
0.591667000,0.067132,-0.057348,0.012484,-0.018360,-0.027030,0.012659,0.999386,
0.600000000,0.072433,-0.057716,0.016355,-0.022097,-0.078087,0.025017,0.996388,
0.608333000,0.082703,-0.059597,0.023437,-0.023906,-0.124597,0.002078,0.991917,
0.616667000,0.087401,-0.059966,0.026904,-0.003801,-0.055941,0.001213,0.998426,
0.625000000,0.086857,-0.061776,0.025252,-0.015945,0.011546,-0.005590,0.999791,
0.633333000,0.091893,-0.066628,0.026411,-0.028201,-0.036693,-0.038101,0.998202,
0.641667000,0.099091,-0.069980,0.030224,-0.027560,-0.075887,-0.017208,0.996587,
0.650000000,0.101379,-0.073487,0.029955,-0.018424,-0.009562,-0.028142,0.999388,
0.658333000,0.098552,-0.077624,0.025131,-0.011510,0.060639,-0.042124,0.997204,
0.666667000,0.099323,-0.078915,0.024905,-0.011559,-0.005457,-0.004952,0.999906,
0.675000000,0.100981,-0.080649,0.025221,-0.017167,-0.016907,-0.004522,0.999699,
0.683333000,0.097745,-0.078968,0.023479,-0.000891,0.025891,0.024128,0.999373,
0.691667000,0.092905,-0.079084,0.019448,0.017758,0.071131,-0.023914,0.997022,
0.700000000,0.090592,-0.075309,0.019695,0.014086,0.007968,0.036454,0.999204,
0.708333000,0.092266,-0.073189,0.022268,0.011715,-0.029062,0.017145,0.999362,
0.716667000,0.091024,-0.070976,0.022476,0.017940,0.010396,0.009202,0.999743,
0.725000000,0.088250,-0.068809,0.021386,0.015151,0.027478,0.011290,0.999444,
0.733333000,0.089548,-0.066793,0.023515,0.016128,-0.020167,0.009885,0.999618,
0.741667000,0.094879,-0.065732,0.028379,0.002021,-0.071579,0.014291,0.997330,
0.750000000,0.097367,-0.064868,0.030788,0.005256,-0.032566,0.006196,0.999437,
0.758333000,0.097204,-0.063205,0.031482,0.020556,0.003403,-0.001573,0.999782,
0.766667000,0.101042,-0.062261,0.035047,0.012664,-0.044611,-0.001499,0.998923,
0.775000000,0.106685,-0.061924,0.039760,-0.002177,-0.072428,0.007979,0.997339,
0.783333000,0.108406,-0.061873,0.041115,0.008730,-0.014595,-0.010560,0.999800,
0.791667000,0.104746,-0.062125,0.037877,0.008649,0.052439,-0.014647,0.998479,
0.800000000,0.105161,-0.062812,0.037789,0.003314,0.003053,-0.014647,0.999883,
0.808333000,0.105092,-0.063135,0.037542,-0.001713,0.002317,-0.003303,0.999990,
0.816667000,0.102764,-0.063993,0.035152,0.007465,0.039893,-0.021561,0.998943,
0.825000000,0.098133,-0.064344,0.031184,0.007843,0.063591,-0.014814,0.997835,
0.833333000,0.095934,-0.065072,0.029011,0.006348,0.036288,-0.018319,0.999153,
0.841667000,0.096641,-0.066039,0.029089,0.004697,0.002236,-0.019808,0.999790,
0.850000000,0.094306,-0.068312,0.025911,-0.003837,0.043433,-0.027112,0.998681,
0.858333000,0.088570,-0.070439,0.020012,0.005109,0.088141,-0.034147,0.995509,
0.866667000,0.085857,-0.073840,0.015848,-0.016241,0.048973,-0.027079,0.998301,
0.875000000,0.087676,-0.079056,0.014356,-0.040207,-0.006398,-0.026020,0.998832,
0.883333000,0.085271,-0.082682,0.010316,-0.038459,0.031555,-0.003614,0.998755,
0.891667000,0.080720,-0.084273,0.005711,-0.031374,0.044800,0.017221,0.998355,
0.900000000,0.079757,-0.085565,0.004176,-0.027430,0.001814,0.016156,0.999492,
0.908333000,0.082262,-0.086551,0.005613,-0.029519,-0.044960,0.023681,0.998272,
0.916667000,0.082915,-0.086433,0.006161,-0.016608,-0.021642,0.023565,0.999350,
0.925000000,0.078584,-0.085502,0.003098,-0.010705,0.037390,0.026590,0.998890,
0.933333000,0.078831,-0.084477,0.003773,-0.006201,-0.015906,0.024023,0.999566,
0.941667000,0.083483,-0.084632,0.007345,-0.014186,-0.065286,0.016883,0.997623,
0.950000000,0.085831,-0.084578,0.009147,-0.005990,-0.032591,0.009327,0.999407,
0.958333000,0.085739,-0.086357,0.007909,-0.018974,0.003471,-0.001927,0.999812,
0.966667000,0.088623,-0.088800,0.008694,-0.014747,-0.023088,-0.017820,0.999466,
0.975000000,0.093680,-0.090702,0.011585,-0.021345,-0.059346,-0.001720,0.998008,
0.983333000,0.095719,-0.092075,0.012313,-0.011006,-0.019773,-0.006314,0.999724,
0.991667000,0.094328,-0.091293,0.011414,-0.003196,0.009507,0.015642,0.999827,
1.000000000,0.095900,-0.093541,0.011231,-0.025095,-0.016474,-0.001970,0.999547,
1.008333000,0.103092,-0.098713,0.013964,-0.051766,-0.077195,-0.016144,0.995540,
1.016667000,0.108728,-0.103996,0.015360,-0.047408,-0.054016,-0.022281,0.997165,
1.025000000,0.109524,-0.107404,0.013854,-0.026852,0.002080,-0.016876,0.999495,
1.033333000,0.116527,-0.111720,0.016949,-0.033230,-0.068746,-0.025532,0.996754,
1.041667000,0.123662,-0.116451,0.019980,-0.025643,-0.060729,-0.041269,0.996971,
1.050000000,0.123755,-0.118619,0.018685,-0.007518,0.012931,-0.022323,0.999639,
1.058333000,0.120792,-0.120015,0.015322,0.016055,0.058113,-0.039108,0.997415,
};
